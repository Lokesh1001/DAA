Maximum sub array with maximum length
Given an array of positive and negative numbers, develop a linear algorithm and write a C++ code to print the start index, end index and sum of subarray which is having maximum sum and maximum length. Consider an array with 13 elements 4, -12, 3, 10, 4, 5, -100, 6, 7, 1, 3, 1, 4. There are two subarrays having sum as 22, that is starting at 2 and ending at 5 with elements 3, 10, 4, 5 and another subarray that starts at 8 and end at 13 with elements 6, 7, 1, 3, 1, 4

Input Format

First line contains the number of elements in array, n

Next line contains the elements in the array separated by a space

Output Format

Print the start index, end index and sum of array having maximum sum and having maximum number of elements

/////////////

#include<iostream>
#include<cmath>
using namespace std;
int main(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++)
    cin>>arr[i];
    int max_sum=-INFINITY,start=0,end=0,curr_sum=0,s=0;
    int smax=-9999;
    int size=0;
    for(int i=0;i<n;i++){
        if(arr[i]>0){
            curr_sum+=arr[i];
            size++;
        }
        else{
            if(curr_sum>max_sum){
                max_sum=curr_sum;
                start=s;
                end=i-1;
            }
            else if(curr_sum==max_sum && size>smax){
                max_sum=curr_sum;
                start=s;
                end=i;
            }
            else if(size>smax){
                smax=size;
            }
            curr_sum=0;
            s=i+1;
            size=0;
        }
        if(i==n-1){
            if(curr_sum==max_sum && size>smax){
                max_sum=curr_sum;
                start=s;
                end=i;
            }
        }
    }
    cout<<start+1<<" "<<end+1<<" "<<max_sum;
    //cout<<smax;
}
